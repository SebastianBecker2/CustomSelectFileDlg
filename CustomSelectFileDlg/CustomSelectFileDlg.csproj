<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0-windows</TargetFramework>
    <Nullable>enable</Nullable>
    <UseWindowsForms>true</UseWindowsForms>
    <ImplicitUsings>enable</ImplicitUsings>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>$(AssemblyName)</Title>
    <Copyright>Copyright © $([System.DateTime]::Today.ToString(yyyy)) $(Authors)</Copyright>
    <PackageProjectUrl>https://github.com/SebastianBecker2/CustomSelectFileDlg</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/SebastianBecker2/CustomSelectFileDlg</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>windows; winforms; control</PackageTags>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <IncludeSymbols>True</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Description>CustomSelectFileDlg is a .Net WinForms dialog that allows you to specify the content yourself.
Regular OpenFileDialog and SaveFileDialog show files and folders from the local filesystems.
With CustomSelectFileDlg, you can create your own filesystem or show the filesystem of another machine or display anything that has a filesystem-like hierarchy.
CustomSelectFileDlg tries to imitate the style and usability of the standard Windows OpenFileDialog and SaveFileDialog.
Additionally it supports folder selection, similar to the CommonOpenFileDialog from Microsoft.WindowsAPICodePack.Dialogs.</Description>
    <PackageReleaseNotes>Initial release</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
